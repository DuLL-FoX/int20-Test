generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  username   String       @unique
  password   String
  auction    Auction[]
  auctionLot AuctionLot[]
  auctionBid AuctionBid[]

  @@map("users")
}

model Auction {
  id                      Int           @id @default(autoincrement())
  slug                    String        @unique
  title                   String
  briefDescription        String
  createdAt               DateTime      @default(now())
  updatedAt               DateTime      @updatedAt
  auctionDate             DateTime
  auctionLotLogoUrl       String        @default("")
  status                  AuctionStatus @default(ACTIVE)
  authorName              String        @unique
  author                  User          @relation(fields: [authorName], references: [username])
  auctionLots             AuctionLot[]
  chatId                  Int
  contactPointContactName String
  chat                    ChatSession   @relation(fields: [chatId], references: [id])
  contactPoint            ContactPoint  @relation(fields: [contactPointContactName], references: [contactName])

  @@map("auctions")
}

enum AuctionStatus {
  ACTIVE
  ENDED
  CANCELLED
}

model AuctionLot {
  id               Int              @id @default(autoincrement())
  lotSlug          String           @unique
  naming           String
  objectClassifier String
  startPrice       Float
  lotLogoUrl       String
  auctionId        Int
  userId           Int
  auction          Auction          @relation(fields: [auctionId], references: [id])
  user             User             @relation(fields: [userId], references: [id])
  auctionBids      AuctionBid[]
  createdAt        DateTime         @default(now())
  lotStatus        AuctionLotStatus @default(ACTIVE)

  @@map("auction_lot")
}

enum AuctionLotStatus {
  ACTIVE
  SOLD
  UNSOLD
}

model ContactPoint {
  contactName  String    @id
  contactPhone String
  contactEmail String?
  Auction      Auction[]

  @@map("contact_point")
}

model AuctionBid {
  id        Int        @id @default(autoincrement())
  lotId     Int
  userId    Int
  bidAmount Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  lot       AuctionLot @relation(fields: [lotId], references: [id])
  user      User       @relation(fields: [userId], references: [id])

  @@map("auction_bid")
}

model ChatSession {
  id        Int       @id @default(autoincrement())
  auctionId Int
  message   Message[]
  createdAt DateTime  @default(now())
  Auction   Auction[]

  @@map("chat_session")
}

model Message {
  id          Int          @id @default(autoincrement())
  messageText String
  auctionId   Int
  userId      Int
  Chat        ChatSession? @relation(fields: [chatId], references: [id])
  chatId      Int?

  @@map("message")
}
